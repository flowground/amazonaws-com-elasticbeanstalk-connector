{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "Request to update an environment.",
            "example": {
                "EnvironmentName": "my-env",
                "OptionSettings": [
                    {
                        "Namespace": "aws:elb:healthcheck",
                        "OptionName": "Interval",
                        "Value": "15"
                    },
                    {
                        "Namespace": "aws:elb:healthcheck",
                        "OptionName": "Timeout",
                        "Value": "8"
                    },
                    {
                        "Namespace": "aws:elb:healthcheck",
                        "OptionName": "HealthyThreshold",
                        "Value": "2"
                    },
                    {
                        "Namespace": "aws:elb:healthcheck",
                        "OptionName": "UnhealthyThreshold",
                        "Value": "3"
                    }
                ]
            },
            "properties": {
                "ApplicationName": {
                    "description": "The name of the application with which the environment is associated.",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "Description": {
                    "description": "If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.",
                    "maxLength": 200,
                    "type": "string"
                },
                "EnvironmentId": {
                    "description": "<p>The ID of the environment to update.</p> <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "type": "string"
                },
                "EnvironmentName": {
                    "description": "<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>",
                    "maxLength": 40,
                    "minLength": 4,
                    "type": "string"
                },
                "GroupName": {
                    "description": "The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html\">Environment Manifest (env.yaml)</a> for details.",
                    "maxLength": 19,
                    "minLength": 1,
                    "type": "string"
                },
                "OptionSettings": {
                    "description": "If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.",
                    "items": {
                        "description": " A specification identifying an individual configuration option along with its current value. For a list of possible option values, go to <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html\">Option Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>. ",
                        "properties": {
                            "Namespace": {
                                "description": "A unique namespace identifying the option's associated AWS resource.",
                                "type": "string"
                            },
                            "OptionName": {
                                "description": "The name of the configuration option.",
                                "type": "string"
                            },
                            "ResourceName": {
                                "description": "A unique resource name for a time-based scaling configuration option.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Value": {
                                "description": "The current value for the configuration option.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "OptionsToRemove": {
                    "description": "A list of custom user-defined configuration options to remove from the configuration set for this environment.",
                    "items": {
                        "description": "A specification identifying an individual configuration option.",
                        "properties": {
                            "Namespace": {
                                "description": "A unique namespace identifying the option's associated AWS resource.",
                                "type": "string"
                            },
                            "OptionName": {
                                "description": "The name of the configuration option.",
                                "type": "string"
                            },
                            "ResourceName": {
                                "description": "A unique resource name for a time-based scaling configuration option.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "PlatformArn": {
                    "description": "The ARN of the platform, if used.",
                    "type": "string"
                },
                "SolutionStackName": {
                    "description": "This specifies the platform version that the environment will run after the environment is updated.",
                    "type": "string"
                },
                "TemplateName": {
                    "description": "If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. ",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "Tier": {
                    "description": "<p>This specifies the tier to use to update the environment.</p> <p>Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p>",
                    "properties": {
                        "Name": {
                            "description": "<p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>",
                            "type": "string"
                        },
                        "Type": {
                            "description": "<p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>",
                            "type": "string"
                        },
                        "Version": {
                            "description": "<p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "VersionLabel": {
                    "description": "If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. ",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}