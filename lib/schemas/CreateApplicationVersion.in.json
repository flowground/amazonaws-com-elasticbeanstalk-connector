{
    "type": "object",
    "properties": {
        "Action": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "description": "<p/>",
            "example": {
                "ApplicationName": "my-app",
                "AutoCreateApplication": true,
                "Description": "my-app-v1",
                "Process": true,
                "SourceBundle": {
                    "S3Bucket": "my-bucket",
                    "S3Key": "sample.war"
                },
                "VersionLabel": "v1"
            },
            "properties": {
                "ApplicationName": {
                    "description": " The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. ",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                },
                "AutoCreateApplication": {
                    "description": "Set to <code>true</code> to create an application with the specified name if it doesn't already exist.",
                    "type": "boolean"
                },
                "BuildConfiguration": {
                    "description": "Settings for an AWS CodeBuild build.",
                    "properties": {
                        "ArtifactName": {
                            "description": "The name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. ",
                            "type": "string"
                        },
                        "CodeBuildServiceRole": {
                            "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.",
                            "pattern": ".*\\S.*",
                            "type": "string"
                        },
                        "ComputeType": {
                            "description": "<p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>",
                            "enum": [
                                "BUILD_GENERAL1_SMALL",
                                "BUILD_GENERAL1_MEDIUM",
                                "BUILD_GENERAL1_LARGE"
                            ],
                            "type": "string"
                        },
                        "Image": {
                            "description": "The ID of the Docker image to use for this build project.",
                            "pattern": ".*\\S.*",
                            "type": "string"
                        },
                        "TimeoutInMinutes": {
                            "description": "How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.",
                            "type": "integer"
                        }
                    },
                    "required": [
                        "CodeBuildServiceRole",
                        "Image"
                    ],
                    "type": "object"
                },
                "Description": {
                    "description": "Describes this version.",
                    "maxLength": 200,
                    "type": "string"
                },
                "Process": {
                    "description": "<p>Pre-processes and validates the environment manifest (<code>env.yaml</code>) and configuration files (<code>*.config</code> files in the <code>.ebextensions</code> folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.</p> <p>You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.</p> <note> <p>The <code>Process</code> option validates Elastic Beanstalk configuration files. It doesn't validate your application's configuration files, like proxy server or Docker configuration.</p> </note>",
                    "type": "boolean"
                },
                "SourceBuildInformation": {
                    "description": "Specify a commit in an AWS CodeCommit Git repository to use as the source code for the application version.",
                    "properties": {
                        "SourceLocation": {
                            "description": "<p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>",
                            "maxLength": 255,
                            "minLength": 3,
                            "pattern": ".+/.+",
                            "type": "string"
                        },
                        "SourceRepository": {
                            "description": "<p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>",
                            "enum": [
                                "CodeCommit",
                                "S3"
                            ],
                            "type": "string"
                        },
                        "SourceType": {
                            "description": "<p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>",
                            "enum": [
                                "Git",
                                "Zip"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "SourceType",
                        "SourceRepository",
                        "SourceLocation"
                    ],
                    "type": "object"
                },
                "SourceBundle": {
                    "description": "<p>The Amazon S3 bucket and key that identify the location of the source bundle for this version.</p> <note> <p>The Amazon S3 bucket must be in the same region as the environment.</p> </note> <p>Specify a source bundle in S3 or a commit in an AWS CodeCommit repository (with <code>SourceBuildInformation</code>), but not both. If neither <code>SourceBundle</code> nor <code>SourceBuildInformation</code> are provided, Elastic Beanstalk uses a sample application.</p>",
                    "properties": {
                        "S3Bucket": {
                            "description": "The Amazon S3 bucket where the data is located.",
                            "maxLength": 255,
                            "type": "string"
                        },
                        "S3Key": {
                            "description": "The Amazon S3 key where the data is located.",
                            "maxLength": 1024,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "Tags": {
                    "description": "<p>Specifies the tags applied to the application version.</p> <p>Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.</p>",
                    "items": {
                        "description": "Describes a tag applied to a resource in an environment.",
                        "properties": {
                            "Key": {
                                "description": "The key of the tag.",
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                            },
                            "Value": {
                                "description": "The value of the tag.",
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "VersionLabel": {
                    "description": "<p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "ApplicationName",
                "VersionLabel"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}